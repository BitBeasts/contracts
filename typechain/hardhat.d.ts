/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "CollateralEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollateralEscrow__factory>;
    getContractFactory(
      name: "AavegotchiFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AavegotchiFacet__factory>;
    getContractFactory(
      name: "AavegotchiGameFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AavegotchiGameFacet__factory>;
    getContractFactory(
      name: "BridgeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BridgeFacet__factory>;
    getContractFactory(
      name: "CollateralFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollateralFacet__factory>;
    getContractFactory(
      name: "DAOFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DAOFacet__factory>;
    getContractFactory(
      name: "ERC1155MarketplaceFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MarketplaceFacet__factory>;
    getContractFactory(
      name: "ERC721MarketplaceFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MarketplaceFacet__factory>;
    getContractFactory(
      name: "EscrowFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EscrowFacet__factory>;
    getContractFactory(
      name: "GotchiLendingFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GotchiLendingFacet__factory>;
    getContractFactory(
      name: "ItemsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ItemsFacet__factory>;
    getContractFactory(
      name: "ItemsTransferFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ItemsTransferFacet__factory>;
    getContractFactory(
      name: "LendingGetterAndSetterFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingGetterAndSetterFacet__factory>;
    getContractFactory(
      name: "MarketplaceGetterFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketplaceGetterFacet__factory>;
    getContractFactory(
      name: "MerkleDropFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleDropFacet__factory>;
    getContractFactory(
      name: "MetaTransactionsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetaTransactionsFacet__factory>;
    getContractFactory(
      name: "PeripheryFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryFacet__factory>;
    getContractFactory(
      name: "ShopFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShopFacet__factory>;
    getContractFactory(
      name: "SvgFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SvgFacet__factory>;
    getContractFactory(
      name: "SvgViewsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SvgViewsFacet__factory>;
    getContractFactory(
      name: "VoucherMigrationFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoucherMigrationFacet__factory>;
    getContractFactory(
      name: "VrfFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VrfFacet__factory>;
    getContractFactory(
      name: "WearableSetsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WearableSetsFacet__factory>;
    getContractFactory(
      name: "WhitelistFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WhitelistFacet__factory>;
    getContractFactory(
      name: "ForgeDAOFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForgeDAOFacet__factory>;
    getContractFactory(
      name: "ForgeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForgeFacet__factory>;
    getContractFactory(
      name: "ForgeTokenFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForgeTokenFacet__factory>;
    getContractFactory(
      name: "ForgeDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForgeDiamond__factory>;
    getContractFactory(
      name: "ForgeLibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForgeLibDiamond__factory>;
    getContractFactory(
      name: "InitBorrowLimit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitBorrowLimit__factory>;
    getContractFactory(
      name: "InitDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitDiamond__factory>;
    getContractFactory(
      name: "ILink",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILink__factory>;
    getContractFactory(
      name: "IPeripheryFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryFacet__factory>;
    getContractFactory(
      name: "LibAavegotchi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibAavegotchi__factory>;
    getContractFactory(
      name: "LibERC1155Marketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibERC1155Marketplace__factory>;
    getContractFactory(
      name: "LibERC721Marketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibERC721Marketplace__factory>;
    getContractFactory(
      name: "LibGotchiLending",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibGotchiLending__factory>;
    getContractFactory(
      name: "LibSvg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibSvg__factory>;
    getContractFactory(
      name: "LibWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibWhitelist__factory>;
    getContractFactory(
      name: "LibXPAllocation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibXPAllocation__factory>;
    getContractFactory(
      name: "EventHandlerFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventHandlerFacet__factory>;
    getContractFactory(
      name: "WearablesFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WearablesFacet__factory>;
    getContractFactory(
      name: "IEventHandlerFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEventHandlerFacet__factory>;
    getContractFactory(
      name: "LibEventHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibEventHandler__factory>;
    getContractFactory(
      name: "WearableLibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WearableLibDiamond__factory>;
    getContractFactory(
      name: "WearableDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WearableDiamond__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "AavegotchiFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AavegotchiFacet__factory>;
    getContractFactory(
      name: "BridgeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BridgeFacet__factory>;
    getContractFactory(
      name: "ItemsFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ItemsFacet__factory>;
    getContractFactory(
      name: "InitDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitDiamond__factory>;
    getContractFactory(
      name: "GHSTFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GHSTFacet__factory>;
    getContractFactory(
      name: "InitDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitDiamond__factory>;
    getContractFactory(
      name: "IGHSTDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGHSTDiamond__factory>;
    getContractFactory(
      name: "ThirdPartyDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ThirdPartyDistributor__factory>;
    getContractFactory(
      name: "ThirdPartyDistributorFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ThirdPartyDistributorFactory__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "ILink",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILink__factory>;
    getContractFactory(
      name: "RafflesContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RafflesContract__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155TokenReceiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721TokenReceiver__factory>;
    getContractFactory(
      name: "IFakeGotchi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFakeGotchi__factory>;
    getContractFactory(
      name: "IMultiRoyalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMultiRoyalty__factory>;
    getContractFactory(
      name: "IRealmDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRealmDiamond__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "LibERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibERC1155__factory>;
    getContractFactory(
      name: "LibERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibERC721__factory>;
    getContractFactory(
      name: "ACL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ACL__factory>;
    getContractFactory(
      name: "AppStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppStorage__factory>;
    getContractFactory(
      name: "AragonApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AragonApp__factory>;
    getContractFactory(
      name: "Autopetrified",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Autopetrified__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "EVMScriptRunner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EVMScriptRunner__factory>;
    getContractFactory(
      name: "IACL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IACL__factory>;
    getContractFactory(
      name: "IACLOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IACLOracle__factory>;
    getContractFactory(
      name: "IEVMScriptExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEVMScriptExecutor__factory>;
    getContractFactory(
      name: "IEVMScriptRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEVMScriptRegistry__factory>;
    getContractFactory(
      name: "IKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKernel__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "IVaultRecoverable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultRecoverable__factory>;
    getContractFactory(
      name: "Petrifiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Petrifiable__factory>;
    getContractFactory(
      name: "VaultRecoverable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultRecoverable__factory>;
    getContractFactory(
      name: "Agent",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Agent__factory>;
    getContractFactory(
      name: "ApproveAndCallFallBack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ApproveAndCallFallBack__factory>;
    getContractFactory(
      name: "AppStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppStorage__factory>;
    getContractFactory(
      name: "AragonApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AragonApp__factory>;
    getContractFactory(
      name: "AragonFundraisingController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AragonFundraisingController__factory>;
    getContractFactory(
      name: "Autopetrified",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Autopetrified__factory>;
    getContractFactory(
      name: "BancorFormula",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BancorFormula__factory>;
    getContractFactory(
      name: "BatchedBancorMarketMaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchedBancorMarketMaker__factory>;
    getContractFactory(
      name: "Controlled",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controlled__factory>;
    getContractFactory(
      name: "DepositableStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DepositableStorage__factory>;
    getContractFactory(
      name: "ERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271__factory>;
    getContractFactory(
      name: "ERC1271Bytes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271Bytes__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "EVMScriptRunner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EVMScriptRunner__factory>;
    getContractFactory(
      name: "IACL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IACL__factory>;
    getContractFactory(
      name: "IAragonFundraisingController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAragonFundraisingController__factory>;
    getContractFactory(
      name: "IBancorFormula",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBancorFormula__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IEVMScriptExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEVMScriptExecutor__factory>;
    getContractFactory(
      name: "IEVMScriptRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEVMScriptRegistry__factory>;
    getContractFactory(
      name: "IForwarder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IForwarder__factory>;
    getContractFactory(
      name: "IKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKernel__factory>;
    getContractFactory(
      name: "IKernelEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKernelEvents__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "IPresale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPresale__factory>;
    getContractFactory(
      name: "ITap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITap__factory>;
    getContractFactory(
      name: "ITokenController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenController__factory>;
    getContractFactory(
      name: "IVaultRecoverable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultRecoverable__factory>;
    getContractFactory(
      name: "MiniMeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MiniMeToken__factory>;
    getContractFactory(
      name: "MiniMeTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MiniMeTokenFactory__factory>;
    getContractFactory(
      name: "Petrifiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Petrifiable__factory>;
    getContractFactory(
      name: "SignatureValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignatureValidator__factory>;
    getContractFactory(
      name: "TokenManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenManager__factory>;
    getContractFactory(
      name: "Utils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Utils__factory>;
    getContractFactory(
      name: "Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vault__factory>;
    getContractFactory(
      name: "VaultRecoverable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultRecoverable__factory>;
    getContractFactory(
      name: "ERC20MintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20MintableBurnable__factory>;
    getContractFactory(
      name: "ERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Token__factory>;
    getContractFactory(
      name: "ERC721WithMultiRoyalties",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721WithMultiRoyalties__factory>;
    getContractFactory(
      name: "ERC721WithRoyalties",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721WithRoyalties__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155TokenReceiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "LibERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibERC20__factory>;
    getContractFactory(
      name: "LinkTokenMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenMock__factory>;
    getContractFactory(
      name: "MyFacet1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyFacet1__factory>;
    getContractFactory(
      name: "ApproveAndCallFallBack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ApproveAndCallFallBack__factory>;
    getContractFactory(
      name: "AppStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AppStorage__factory>;
    getContractFactory(
      name: "AragonApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AragonApp__factory>;
    getContractFactory(
      name: "Autopetrified",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Autopetrified__factory>;
    getContractFactory(
      name: "Controlled",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controlled__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "EVMScriptRunner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EVMScriptRunner__factory>;
    getContractFactory(
      name: "IACL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IACL__factory>;
    getContractFactory(
      name: "IEVMScriptExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEVMScriptExecutor__factory>;
    getContractFactory(
      name: "IEVMScriptRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEVMScriptRegistry__factory>;
    getContractFactory(
      name: "IForwarder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IForwarder__factory>;
    getContractFactory(
      name: "IKernel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKernel__factory>;
    getContractFactory(
      name: "IKernelEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKernelEvents__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ITokenController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenController__factory>;
    getContractFactory(
      name: "IVaultRecoverable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultRecoverable__factory>;
    getContractFactory(
      name: "MiniMeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MiniMeToken__factory>;
    getContractFactory(
      name: "MiniMeTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MiniMeTokenFactory__factory>;
    getContractFactory(
      name: "Petrifiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Petrifiable__factory>;
    getContractFactory(
      name: "VaultRecoverable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultRecoverable__factory>;
    getContractFactory(
      name: "Voting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Voting__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "CollateralEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollateralEscrow>;
    getContractAt(
      name: "AavegotchiFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AavegotchiFacet>;
    getContractAt(
      name: "AavegotchiGameFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AavegotchiGameFacet>;
    getContractAt(
      name: "BridgeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BridgeFacet>;
    getContractAt(
      name: "CollateralFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollateralFacet>;
    getContractAt(
      name: "DAOFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DAOFacet>;
    getContractAt(
      name: "ERC1155MarketplaceFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MarketplaceFacet>;
    getContractAt(
      name: "ERC721MarketplaceFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MarketplaceFacet>;
    getContractAt(
      name: "EscrowFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EscrowFacet>;
    getContractAt(
      name: "GotchiLendingFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GotchiLendingFacet>;
    getContractAt(
      name: "ItemsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ItemsFacet>;
    getContractAt(
      name: "ItemsTransferFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ItemsTransferFacet>;
    getContractAt(
      name: "LendingGetterAndSetterFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LendingGetterAndSetterFacet>;
    getContractAt(
      name: "MarketplaceGetterFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketplaceGetterFacet>;
    getContractAt(
      name: "MerkleDropFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleDropFacet>;
    getContractAt(
      name: "MetaTransactionsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MetaTransactionsFacet>;
    getContractAt(
      name: "PeripheryFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PeripheryFacet>;
    getContractAt(
      name: "ShopFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShopFacet>;
    getContractAt(
      name: "SvgFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SvgFacet>;
    getContractAt(
      name: "SvgViewsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SvgViewsFacet>;
    getContractAt(
      name: "VoucherMigrationFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VoucherMigrationFacet>;
    getContractAt(
      name: "VrfFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VrfFacet>;
    getContractAt(
      name: "WearableSetsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WearableSetsFacet>;
    getContractAt(
      name: "WhitelistFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WhitelistFacet>;
    getContractAt(
      name: "ForgeDAOFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForgeDAOFacet>;
    getContractAt(
      name: "ForgeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForgeFacet>;
    getContractAt(
      name: "ForgeTokenFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForgeTokenFacet>;
    getContractAt(
      name: "ForgeDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForgeDiamond>;
    getContractAt(
      name: "ForgeLibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForgeLibDiamond>;
    getContractAt(
      name: "InitBorrowLimit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitBorrowLimit>;
    getContractAt(
      name: "InitDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitDiamond>;
    getContractAt(
      name: "ILink",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILink>;
    getContractAt(
      name: "IPeripheryFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPeripheryFacet>;
    getContractAt(
      name: "LibAavegotchi",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibAavegotchi>;
    getContractAt(
      name: "LibERC1155Marketplace",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibERC1155Marketplace>;
    getContractAt(
      name: "LibERC721Marketplace",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibERC721Marketplace>;
    getContractAt(
      name: "LibGotchiLending",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibGotchiLending>;
    getContractAt(
      name: "LibSvg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibSvg>;
    getContractAt(
      name: "LibWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibWhitelist>;
    getContractAt(
      name: "LibXPAllocation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibXPAllocation>;
    getContractAt(
      name: "EventHandlerFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EventHandlerFacet>;
    getContractAt(
      name: "WearablesFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WearablesFacet>;
    getContractAt(
      name: "IEventHandlerFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEventHandlerFacet>;
    getContractAt(
      name: "LibEventHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibEventHandler>;
    getContractAt(
      name: "WearableLibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WearableLibDiamond>;
    getContractAt(
      name: "WearableDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WearableDiamond>;
    getContractAt(
      name: "Diamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Diamond>;
    getContractAt(
      name: "AavegotchiFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AavegotchiFacet>;
    getContractAt(
      name: "BridgeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BridgeFacet>;
    getContractAt(
      name: "ItemsFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ItemsFacet>;
    getContractAt(
      name: "InitDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitDiamond>;
    getContractAt(
      name: "GHSTFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GHSTFacet>;
    getContractAt(
      name: "InitDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitDiamond>;
    getContractAt(
      name: "IGHSTDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGHSTDiamond>;
    getContractAt(
      name: "ThirdPartyDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ThirdPartyDistributor>;
    getContractAt(
      name: "ThirdPartyDistributorFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ThirdPartyDistributorFactory>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "ILink",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILink>;
    getContractAt(
      name: "RafflesContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RafflesContract>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155TokenReceiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721TokenReceiver>;
    getContractAt(
      name: "IFakeGotchi",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFakeGotchi>;
    getContractAt(
      name: "IMultiRoyalty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMultiRoyalty>;
    getContractAt(
      name: "IRealmDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRealmDiamond>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "LibERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibERC1155>;
    getContractAt(
      name: "LibERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibERC721>;
    getContractAt(
      name: "ACL",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ACL>;
    getContractAt(
      name: "AppStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AppStorage>;
    getContractAt(
      name: "AragonApp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AragonApp>;
    getContractAt(
      name: "Autopetrified",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Autopetrified>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "EVMScriptRunner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EVMScriptRunner>;
    getContractAt(
      name: "IACL",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IACL>;
    getContractAt(
      name: "IACLOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IACLOracle>;
    getContractAt(
      name: "IEVMScriptExecutor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEVMScriptExecutor>;
    getContractAt(
      name: "IEVMScriptRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEVMScriptRegistry>;
    getContractAt(
      name: "IKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKernel>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "IVaultRecoverable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultRecoverable>;
    getContractAt(
      name: "Petrifiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Petrifiable>;
    getContractAt(
      name: "VaultRecoverable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultRecoverable>;
    getContractAt(
      name: "Agent",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Agent>;
    getContractAt(
      name: "ApproveAndCallFallBack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ApproveAndCallFallBack>;
    getContractAt(
      name: "AppStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AppStorage>;
    getContractAt(
      name: "AragonApp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AragonApp>;
    getContractAt(
      name: "AragonFundraisingController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AragonFundraisingController>;
    getContractAt(
      name: "Autopetrified",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Autopetrified>;
    getContractAt(
      name: "BancorFormula",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BancorFormula>;
    getContractAt(
      name: "BatchedBancorMarketMaker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchedBancorMarketMaker>;
    getContractAt(
      name: "Controlled",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Controlled>;
    getContractAt(
      name: "DepositableStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DepositableStorage>;
    getContractAt(
      name: "ERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271>;
    getContractAt(
      name: "ERC1271Bytes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271Bytes>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "EVMScriptRunner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EVMScriptRunner>;
    getContractAt(
      name: "IACL",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IACL>;
    getContractAt(
      name: "IAragonFundraisingController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAragonFundraisingController>;
    getContractAt(
      name: "IBancorFormula",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBancorFormula>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IEVMScriptExecutor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEVMScriptExecutor>;
    getContractAt(
      name: "IEVMScriptRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEVMScriptRegistry>;
    getContractAt(
      name: "IForwarder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IForwarder>;
    getContractAt(
      name: "IKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKernel>;
    getContractAt(
      name: "IKernelEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKernelEvents>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "IPresale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPresale>;
    getContractAt(
      name: "ITap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITap>;
    getContractAt(
      name: "ITokenController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenController>;
    getContractAt(
      name: "IVaultRecoverable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultRecoverable>;
    getContractAt(
      name: "MiniMeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MiniMeToken>;
    getContractAt(
      name: "MiniMeTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MiniMeTokenFactory>;
    getContractAt(
      name: "Petrifiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Petrifiable>;
    getContractAt(
      name: "SignatureValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignatureValidator>;
    getContractAt(
      name: "TokenManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenManager>;
    getContractAt(
      name: "Utils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Utils>;
    getContractAt(
      name: "Vault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vault>;
    getContractAt(
      name: "VaultRecoverable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultRecoverable>;
    getContractAt(
      name: "ERC20MintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20MintableBurnable>;
    getContractAt(
      name: "ERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Token>;
    getContractAt(
      name: "ERC721WithMultiRoyalties",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721WithMultiRoyalties>;
    getContractAt(
      name: "ERC721WithRoyalties",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721WithRoyalties>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155TokenReceiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "LibERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibERC20>;
    getContractAt(
      name: "LinkTokenMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenMock>;
    getContractAt(
      name: "MyFacet1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MyFacet1>;
    getContractAt(
      name: "ApproveAndCallFallBack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ApproveAndCallFallBack>;
    getContractAt(
      name: "AppStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AppStorage>;
    getContractAt(
      name: "AragonApp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AragonApp>;
    getContractAt(
      name: "Autopetrified",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Autopetrified>;
    getContractAt(
      name: "Controlled",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Controlled>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "EVMScriptRunner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EVMScriptRunner>;
    getContractAt(
      name: "IACL",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IACL>;
    getContractAt(
      name: "IEVMScriptExecutor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEVMScriptExecutor>;
    getContractAt(
      name: "IEVMScriptRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEVMScriptRegistry>;
    getContractAt(
      name: "IForwarder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IForwarder>;
    getContractAt(
      name: "IKernel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKernel>;
    getContractAt(
      name: "IKernelEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKernelEvents>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ITokenController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenController>;
    getContractAt(
      name: "IVaultRecoverable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultRecoverable>;
    getContractAt(
      name: "MiniMeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MiniMeToken>;
    getContractAt(
      name: "MiniMeTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MiniMeTokenFactory>;
    getContractAt(
      name: "Petrifiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Petrifiable>;
    getContractAt(
      name: "VaultRecoverable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultRecoverable>;
    getContractAt(
      name: "Voting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Voting>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
