/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface ERC721MarketplaceFacetInterface extends ethers.utils.Interface {
  functions: {
    "addERC721Listing(address,uint256,uint256)": FunctionFragment;
    "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)": FunctionFragment;
    "addERC721ListingWithWhitelist(address,uint256,uint256,uint16[2],address,uint32)": FunctionFragment;
    "batchExecuteERC721Listing(tuple[])": FunctionFragment;
    "batchUpdateERC721ListingPrice(uint256[],uint256[])": FunctionFragment;
    "cancelERC721Listing(uint256)": FunctionFragment;
    "cancelERC721ListingByToken(address,uint256)": FunctionFragment;
    "cancelERC721Listings(uint256[])": FunctionFragment;
    "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)": FunctionFragment;
    "getERC721Category(address,uint256)": FunctionFragment;
    "setERC721Categories(tuple[])": FunctionFragment;
    "updateERC721Listing(address,uint256,address)": FunctionFragment;
    "updateERC721ListingPrice(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addERC721Listing",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addERC721ListingWithSplit",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      [BigNumberish, BigNumberish],
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addERC721ListingWithWhitelist",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      [BigNumberish, BigNumberish],
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchExecuteERC721Listing",
    values: [
      {
        listingId: BigNumberish;
        contractAddress: string;
        priceInWei: BigNumberish;
        tokenId: BigNumberish;
        recipient: string;
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchUpdateERC721ListingPrice",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721Listing",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721ListingByToken",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721Listings",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeERC721ListingToRecipient",
    values: [BigNumberish, string, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Category",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721Categories",
    values: [{ erc721TokenAddress: string; category: BigNumberish }[]]
  ): string;
  encodeFunctionData(
    functionFragment: "updateERC721Listing",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateERC721ListingPrice",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "addERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addERC721ListingWithSplit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addERC721ListingWithWhitelist",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchExecuteERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchUpdateERC721ListingPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721ListingByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721Listings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeERC721ListingToRecipient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Category",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721Categories",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateERC721ListingPrice",
    data: BytesLike
  ): Result;

  events: {
    "ERC721ExecutedListing(uint256,address,address,address,uint256,uint256,uint256,uint256)": EventFragment;
    "ERC721ExecutedToRecipient(uint256,address,address)": EventFragment;
    "ERC721ListingAdd(uint256,address,address,uint256,uint256,uint256)": EventFragment;
    "ERC721ListingSplit(uint256,uint16[2],address)": EventFragment;
    "ERC721ListingWhitelistSet(uint256,uint32)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ERC721ExecutedListing"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ExecutedToRecipient"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ListingAdd"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ListingSplit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ListingWhitelistSet"): EventFragment;
}

export type ERC721ExecutedListingEvent = TypedEvent<
  [
    BigNumber,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    listingId: BigNumber;
    seller: string;
    buyer: string;
    erc721TokenAddress: string;
    erc721TokenId: BigNumber;
    category: BigNumber;
    priceInWei: BigNumber;
    time: BigNumber;
  }
>;

export type ERC721ExecutedToRecipientEvent = TypedEvent<
  [BigNumber, string, string] & {
    listingId: BigNumber;
    buyer: string;
    recipient: string;
  }
>;

export type ERC721ListingAddEvent = TypedEvent<
  [BigNumber, string, string, BigNumber, BigNumber, BigNumber] & {
    listingId: BigNumber;
    seller: string;
    erc721TokenAddress: string;
    erc721TokenId: BigNumber;
    category: BigNumber;
    time: BigNumber;
  }
>;

export type ERC721ListingSplitEvent = TypedEvent<
  [BigNumber, [number, number], string] & {
    listingId: BigNumber;
    principalSplit: [number, number];
    affiliate: string;
  }
>;

export type ERC721ListingWhitelistSetEvent = TypedEvent<
  [BigNumber, number] & { listingId: BigNumber; whitelistId: number }
>;

export class ERC721MarketplaceFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ERC721MarketplaceFacetInterface;

  functions: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addERC721ListingWithWhitelist(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      _whitelistId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchExecuteERC721Listing(
      listings: {
        listingId: BigNumberish;
        contractAddress: string;
        priceInWei: BigNumberish;
        tokenId: BigNumberish;
        recipient: string;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchUpdateERC721ListingPrice(
      _listingIds: BigNumberish[],
      _priceInWeis: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelERC721Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelERC721Listings(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    executeERC721ListingToRecipient(
      _listingId: BigNumberish,
      _contractAddress: string,
      _priceInWei: BigNumberish,
      _tokenId: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getERC721Category(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { category_: BigNumber }>;

    setERC721Categories(
      _categories: { erc721TokenAddress: string; category: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateERC721ListingPrice(
      _listingId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addERC721Listing(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    _priceInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addERC721ListingWithSplit(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    _priceInWei: BigNumberish,
    _principalSplit: [BigNumberish, BigNumberish],
    _affiliate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addERC721ListingWithWhitelist(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    _priceInWei: BigNumberish,
    _principalSplit: [BigNumberish, BigNumberish],
    _affiliate: string,
    _whitelistId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchExecuteERC721Listing(
    listings: {
      listingId: BigNumberish;
      contractAddress: string;
      priceInWei: BigNumberish;
      tokenId: BigNumberish;
      recipient: string;
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchUpdateERC721ListingPrice(
    _listingIds: BigNumberish[],
    _priceInWeis: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelERC721Listing(
    _listingId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelERC721ListingByToken(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelERC721Listings(
    _listingIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  executeERC721ListingToRecipient(
    _listingId: BigNumberish,
    _contractAddress: string,
    _priceInWei: BigNumberish,
    _tokenId: BigNumberish,
    _recipient: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getERC721Category(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setERC721Categories(
    _categories: { erc721TokenAddress: string; category: BigNumberish }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateERC721Listing(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateERC721ListingPrice(
    _listingId: BigNumberish,
    _priceInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addERC721ListingWithWhitelist(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      _whitelistId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    batchExecuteERC721Listing(
      listings: {
        listingId: BigNumberish;
        contractAddress: string;
        priceInWei: BigNumberish;
        tokenId: BigNumberish;
        recipient: string;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchUpdateERC721ListingPrice(
      _listingIds: BigNumberish[],
      _priceInWeis: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    cancelERC721Listing(
      _listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelERC721Listings(
      _listingIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    executeERC721ListingToRecipient(
      _listingId: BigNumberish,
      _contractAddress: string,
      _priceInWei: BigNumberish,
      _tokenId: BigNumberish,
      _recipient: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getERC721Category(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setERC721Categories(
      _categories: { erc721TokenAddress: string; category: BigNumberish }[],
      overrides?: CallOverrides
    ): Promise<void>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateERC721ListingPrice(
      _listingId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ERC721ExecutedListing(uint256,address,address,address,uint256,uint256,uint256,uint256)"(
      listingId?: BigNumberish | null,
      seller?: string | null,
      buyer?: null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: BigNumberish | null,
      priceInWei?: null,
      time?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        listingId: BigNumber;
        seller: string;
        buyer: string;
        erc721TokenAddress: string;
        erc721TokenId: BigNumber;
        category: BigNumber;
        priceInWei: BigNumber;
        time: BigNumber;
      }
    >;

    ERC721ExecutedListing(
      listingId?: BigNumberish | null,
      seller?: string | null,
      buyer?: null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: BigNumberish | null,
      priceInWei?: null,
      time?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        listingId: BigNumber;
        seller: string;
        buyer: string;
        erc721TokenAddress: string;
        erc721TokenId: BigNumber;
        category: BigNumber;
        priceInWei: BigNumber;
        time: BigNumber;
      }
    >;

    "ERC721ExecutedToRecipient(uint256,address,address)"(
      listingId?: BigNumberish | null,
      buyer?: string | null,
      recipient?: string | null
    ): TypedEventFilter<
      [BigNumber, string, string],
      { listingId: BigNumber; buyer: string; recipient: string }
    >;

    ERC721ExecutedToRecipient(
      listingId?: BigNumberish | null,
      buyer?: string | null,
      recipient?: string | null
    ): TypedEventFilter<
      [BigNumber, string, string],
      { listingId: BigNumber; buyer: string; recipient: string }
    >;

    "ERC721ListingAdd(uint256,address,address,uint256,uint256,uint256)"(
      listingId?: BigNumberish | null,
      seller?: string | null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: BigNumberish | null,
      time?: null
    ): TypedEventFilter<
      [BigNumber, string, string, BigNumber, BigNumber, BigNumber],
      {
        listingId: BigNumber;
        seller: string;
        erc721TokenAddress: string;
        erc721TokenId: BigNumber;
        category: BigNumber;
        time: BigNumber;
      }
    >;

    ERC721ListingAdd(
      listingId?: BigNumberish | null,
      seller?: string | null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: BigNumberish | null,
      time?: null
    ): TypedEventFilter<
      [BigNumber, string, string, BigNumber, BigNumber, BigNumber],
      {
        listingId: BigNumber;
        seller: string;
        erc721TokenAddress: string;
        erc721TokenId: BigNumber;
        category: BigNumber;
        time: BigNumber;
      }
    >;

    "ERC721ListingSplit(uint256,uint16[2],address)"(
      listingId?: BigNumberish | null,
      principalSplit?: null,
      affiliate?: null
    ): TypedEventFilter<
      [BigNumber, [number, number], string],
      {
        listingId: BigNumber;
        principalSplit: [number, number];
        affiliate: string;
      }
    >;

    ERC721ListingSplit(
      listingId?: BigNumberish | null,
      principalSplit?: null,
      affiliate?: null
    ): TypedEventFilter<
      [BigNumber, [number, number], string],
      {
        listingId: BigNumber;
        principalSplit: [number, number];
        affiliate: string;
      }
    >;

    "ERC721ListingWhitelistSet(uint256,uint32)"(
      listingId?: BigNumberish | null,
      whitelistId?: null
    ): TypedEventFilter<
      [BigNumber, number],
      { listingId: BigNumber; whitelistId: number }
    >;

    ERC721ListingWhitelistSet(
      listingId?: BigNumberish | null,
      whitelistId?: null
    ): TypedEventFilter<
      [BigNumber, number],
      { listingId: BigNumber; whitelistId: number }
    >;
  };

  estimateGas: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addERC721ListingWithWhitelist(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      _whitelistId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchExecuteERC721Listing(
      listings: {
        listingId: BigNumberish;
        contractAddress: string;
        priceInWei: BigNumberish;
        tokenId: BigNumberish;
        recipient: string;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchUpdateERC721ListingPrice(
      _listingIds: BigNumberish[],
      _priceInWeis: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelERC721Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelERC721Listings(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    executeERC721ListingToRecipient(
      _listingId: BigNumberish,
      _contractAddress: string,
      _priceInWei: BigNumberish,
      _tokenId: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getERC721Category(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setERC721Categories(
      _categories: { erc721TokenAddress: string; category: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateERC721ListingPrice(
      _listingId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addERC721ListingWithWhitelist(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      _principalSplit: [BigNumberish, BigNumberish],
      _affiliate: string,
      _whitelistId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchExecuteERC721Listing(
      listings: {
        listingId: BigNumberish;
        contractAddress: string;
        priceInWei: BigNumberish;
        tokenId: BigNumberish;
        recipient: string;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchUpdateERC721ListingPrice(
      _listingIds: BigNumberish[],
      _priceInWeis: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelERC721Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelERC721Listings(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    executeERC721ListingToRecipient(
      _listingId: BigNumberish,
      _contractAddress: string,
      _priceInWei: BigNumberish,
      _tokenId: BigNumberish,
      _recipient: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getERC721Category(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setERC721Categories(
      _categories: { erc721TokenAddress: string; category: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateERC721ListingPrice(
      _listingId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
