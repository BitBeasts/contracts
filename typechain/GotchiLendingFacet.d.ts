/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface GotchiLendingFacetInterface extends ethers.utils.Interface {
  functions: {
    "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])": FunctionFragment;
    "addGotchiListing(tuple)": FunctionFragment;
    "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])": FunctionFragment;
    "batchAddGotchiListing(tuple[])": FunctionFragment;
    "batchCancelGotchiLending(uint32[])": FunctionFragment;
    "batchCancelGotchiLendingByToken(uint32[])": FunctionFragment;
    "batchClaimAndEndAndRelistGotchiLending(uint32[])": FunctionFragment;
    "batchClaimAndEndGotchiLending(uint32[])": FunctionFragment;
    "batchClaimGotchiLending(uint32[])": FunctionFragment;
    "batchExtendGotchiLending(tuple[])": FunctionFragment;
    "cancelGotchiLending(uint32)": FunctionFragment;
    "cancelGotchiLendingByToken(uint32)": FunctionFragment;
    "claimAndEndAndRelistGotchiLending(uint32)": FunctionFragment;
    "claimAndEndGotchiLending(uint32)": FunctionFragment;
    "claimGotchiLending(uint32)": FunctionFragment;
    "extendGotchiLending(uint32,uint32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addGotchiLending",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      [BigNumberish, BigNumberish, BigNumberish],
      string,
      string,
      BigNumberish,
      string[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addGotchiListing",
    values: [
      {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      }
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "agreeGotchiLending",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      [BigNumberish, BigNumberish, BigNumberish]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchAddGotchiListing",
    values: [
      {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchCancelGotchiLending",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchCancelGotchiLendingByToken",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchClaimAndEndAndRelistGotchiLending",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchClaimAndEndGotchiLending",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchClaimGotchiLending",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchExtendGotchiLending",
    values: [{ tokenId: BigNumberish; extension: BigNumberish }[]]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelGotchiLending",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelGotchiLendingByToken",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimAndEndAndRelistGotchiLending",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimAndEndGotchiLending",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimGotchiLending",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "extendGotchiLending",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "addGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addGotchiListing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "agreeGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchAddGotchiListing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchCancelGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchCancelGotchiLendingByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchClaimAndEndAndRelistGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchClaimAndEndGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchClaimGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchExtendGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelGotchiLendingByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimAndEndAndRelistGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimAndEndGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "extendGotchiLending",
    data: BytesLike
  ): Result;

  events: {};
}

export class GotchiLendingFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: GotchiLendingFacetInterface;

  functions: {
    addGotchiLending(
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      _originalOwner: string,
      _thirdParty: string,
      _whitelistId: BigNumberish,
      _revenueTokens: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addGotchiListing(
      p: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      },
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    agreeGotchiLending(
      _listingId: BigNumberish,
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchAddGotchiListing(
      listings: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchCancelGotchiLending(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchCancelGotchiLendingByToken(
      _erc721TokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchClaimAndEndAndRelistGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchClaimAndEndGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchClaimGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchExtendGotchiLending(
      _batchRenewParams: { tokenId: BigNumberish; extension: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelGotchiLending(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelGotchiLendingByToken(
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimAndEndAndRelistGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimAndEndGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    extendGotchiLending(
      _tokenId: BigNumberish,
      extension: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addGotchiLending(
    _erc721TokenId: BigNumberish,
    _initialCost: BigNumberish,
    _period: BigNumberish,
    _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
    _originalOwner: string,
    _thirdParty: string,
    _whitelistId: BigNumberish,
    _revenueTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addGotchiListing(
    p: {
      tokenId: BigNumberish;
      initialCost: BigNumberish;
      period: BigNumberish;
      revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
      originalOwner: string;
      thirdParty: string;
      whitelistId: BigNumberish;
      revenueTokens: string[];
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  agreeGotchiLending(
    _listingId: BigNumberish,
    _erc721TokenId: BigNumberish,
    _initialCost: BigNumberish,
    _period: BigNumberish,
    _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchAddGotchiListing(
    listings: {
      tokenId: BigNumberish;
      initialCost: BigNumberish;
      period: BigNumberish;
      revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
      originalOwner: string;
      thirdParty: string;
      whitelistId: BigNumberish;
      revenueTokens: string[];
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchCancelGotchiLending(
    _listingIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchCancelGotchiLendingByToken(
    _erc721TokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchClaimAndEndAndRelistGotchiLending(
    _tokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchClaimAndEndGotchiLending(
    _tokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchClaimGotchiLending(
    _tokenIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchExtendGotchiLending(
    _batchRenewParams: { tokenId: BigNumberish; extension: BigNumberish }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelGotchiLending(
    _listingId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelGotchiLendingByToken(
    _erc721TokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimAndEndAndRelistGotchiLending(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimAndEndGotchiLending(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimGotchiLending(
    _tokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  extendGotchiLending(
    _tokenId: BigNumberish,
    extension: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addGotchiLending(
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      _originalOwner: string,
      _thirdParty: string,
      _whitelistId: BigNumberish,
      _revenueTokens: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    addGotchiListing(
      p: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      },
      overrides?: CallOverrides
    ): Promise<void>;

    agreeGotchiLending(
      _listingId: BigNumberish,
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<void>;

    batchAddGotchiListing(
      listings: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchCancelGotchiLending(
      _listingIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchCancelGotchiLendingByToken(
      _erc721TokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchClaimAndEndAndRelistGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchClaimAndEndGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchClaimGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchExtendGotchiLending(
      _batchRenewParams: { tokenId: BigNumberish; extension: BigNumberish }[],
      overrides?: CallOverrides
    ): Promise<void>;

    cancelGotchiLending(
      _listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelGotchiLendingByToken(
      _erc721TokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimAndEndAndRelistGotchiLending(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimAndEndGotchiLending(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    claimGotchiLending(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    extendGotchiLending(
      _tokenId: BigNumberish,
      extension: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addGotchiLending(
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      _originalOwner: string,
      _thirdParty: string,
      _whitelistId: BigNumberish,
      _revenueTokens: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addGotchiListing(
      p: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      },
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    agreeGotchiLending(
      _listingId: BigNumberish,
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchAddGotchiListing(
      listings: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchCancelGotchiLending(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchCancelGotchiLendingByToken(
      _erc721TokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchClaimAndEndAndRelistGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchClaimAndEndGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchClaimGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchExtendGotchiLending(
      _batchRenewParams: { tokenId: BigNumberish; extension: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelGotchiLending(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelGotchiLendingByToken(
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimAndEndAndRelistGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimAndEndGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    extendGotchiLending(
      _tokenId: BigNumberish,
      extension: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addGotchiLending(
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      _originalOwner: string,
      _thirdParty: string,
      _whitelistId: BigNumberish,
      _revenueTokens: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addGotchiListing(
      p: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      },
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    agreeGotchiLending(
      _listingId: BigNumberish,
      _erc721TokenId: BigNumberish,
      _initialCost: BigNumberish,
      _period: BigNumberish,
      _revenueSplit: [BigNumberish, BigNumberish, BigNumberish],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchAddGotchiListing(
      listings: {
        tokenId: BigNumberish;
        initialCost: BigNumberish;
        period: BigNumberish;
        revenueSplit: [BigNumberish, BigNumberish, BigNumberish];
        originalOwner: string;
        thirdParty: string;
        whitelistId: BigNumberish;
        revenueTokens: string[];
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchCancelGotchiLending(
      _listingIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchCancelGotchiLendingByToken(
      _erc721TokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchClaimAndEndAndRelistGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchClaimAndEndGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchClaimGotchiLending(
      _tokenIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchExtendGotchiLending(
      _batchRenewParams: { tokenId: BigNumberish; extension: BigNumberish }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelGotchiLending(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelGotchiLendingByToken(
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimAndEndAndRelistGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimAndEndGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimGotchiLending(
      _tokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    extendGotchiLending(
      _tokenId: BigNumberish,
      extension: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
