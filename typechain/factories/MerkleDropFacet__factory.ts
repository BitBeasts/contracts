/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleDropFacet,
  MerkleDropFacetInterface,
} from "../MerkleDropFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_propIds",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "_claimers",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "_gotchiIds",
        type: "uint256[][]",
      },
      {
        internalType: "bytes32[][]",
        name: "_proofs",
        type: "bytes32[][]",
      },
      {
        internalType: "uint256[][]",
        name: "_onlyGotchis",
        type: "uint256[][]",
      },
    ],
    name: "batchDropClaimXPDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_propId",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_claimers",
        type: "address[]",
      },
      {
        internalType: "uint256[][]",
        name: "_gotchiIds",
        type: "uint256[][]",
      },
      {
        internalType: "bytes32[][]",
        name: "_proofs",
        type: "bytes32[][]",
      },
      {
        internalType: "uint256[][]",
        name: "_onlyGotchis",
        type: "uint256[][]",
      },
    ],
    name: "batchGotchiClaimXPDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_propId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_gotchiId",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "_onlyGotchis",
        type: "uint256[]",
      },
    ],
    name: "claimXPDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_propId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_xpAmount",
        type: "uint256",
      },
    ],
    name: "createXPDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_propId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_gotchId",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "claimed_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_propId",
        type: "bytes32",
      },
    ],
    name: "viewXPDrop",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "xpAmount",
            type: "uint256",
          },
        ],
        internalType: "struct XPMerkleDrops",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eb5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806385f5276f14610067578063ae69751214610090578063b0ce1562146100a5578063b312c5ba146100b8578063de3fd39c146100cb578063e0a32aa4146100eb575b600080fd5b61007a610075366004610c5a565b6100fe565b6040516100879190610de6565b60405180910390f35b6100a361009e3660046109b1565b610152565b005b6100a36100b3366004610c2f565b6102ad565b6100a36100c6366004610ab4565b610337565b6100de6100d9366004610a9c565b610351565b6040516100879190610dcf565b6100a36100f9366004610b64565b610386565b6000828152605460205260408120600101546101355760405162461bcd60e51b815260040161012c90610d38565b60405180910390fd5b506000908152605560209081526040808320938352929052205490565b88851415806101615750868514155b8061016c5750848314155b156101895760405162461bcd60e51b815260040161012c90610da2565b60005b898110156102a05761028e8b8b838181106101b757634e487b7160e01b600052603260045260246000fd5b905060200201358a8a848181106101de57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906101f39190610990565b89898581811061021357634e487b7160e01b600052603260045260246000fd5b90506020028101906102259190610def565b89898781811061024557634e487b7160e01b600052603260045260246000fd5b90506020028101906102579190610def565b89898981811061027757634e487b7160e01b600052603260045260246000fd5b90506020028101906102899190610def565b6103ff565b8061029881610e4e565b91505061018c565b5050505050505050505050565b60006102b76105f4565b6001600160a01b038082166000818152603c6020526040902054601d54939450151592909116148061030157506102ec610651565b6001600160a01b0316826001600160a01b0316145b806103095750805b6103255760405162461bcd60e51b815260040161012c90610d61565b61033085858561066d565b5050505050565b61034788888888888888886103ff565b5050505050505050565b610359610919565b5060008181526054602090815260409182902082518084019093528054835260010154908201525b919050565b86851415806103955750848314155b156103b25760405162461bcd60e51b815260040161012c90610da2565b60005b858110156103f3576103e18a8a8a848181106101de57634e487b7160e01b600052603260045260246000fd5b806103eb81610e4e565b9150506103b5565b50505050505050505050565b60006104096106d9565b60008a81526054820160205260409020600101549091508061043d5760405162461bcd60e51b815260040161012c90610d38565b600089898960405160200161045493929190610cb5565b60408051601f19818403018152918152815160209283012060008e81526054870190935291205490915061048a888883856106de565b156105e65784156105615760005b8581101561055b5760008787838181106104c257634e487b7160e01b600052603260045260246000fd5b9050602002013590506105098c8c80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250859250610722915050565b156105485785605501600082815260200190815260200160002060008f81526020019081526020016000205460001415610548576105488e828761078a565b508061055381610e4e565b915050610498565b506105e6565b60005b898110156105e45760008b8b8381811061058e57634e487b7160e01b600052603260045260246000fd5b90506020020135905085605501600082815260200190815260200160002060008f815260200190815260200160002054600014156105d1576105d18e828761078a565b50806105dc81610e4e565b915050610564565b505b505050505050505050505050565b60003330141561064b57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b0316915061064e9050565b50335b90565b600061065b6108f5565b600401546001600160a01b0316919050565b60006106776106d9565b6000858152605482016020526040908190208581556001810185905590519192509085907feab27f79825f1888ed96189ceab5a3984c4267f21e2ab571664d4c4744c186c1906106ca9087908790610d2a565b60405180910390a25050505050565b600090565b6000831561071a578360051b8501855b803580851160051b9485526020948518526040600020930181811061071257610717565b6106ee565b50505b501492915050565b8151600090156107845760005b83518110156107825783818151811061075857634e487b7160e01b600052603260045260246000fd5b60200260200101518314156107705760019150610782565b8061077a81610e4e565b91505061072f565b505b92915050565b60006107946106d9565b90508181600d01600085815260200190815260200160002060050160008282546107be9190610e36565b9091555050600083815260558201602090815260408083208784528252808320859055805160018082528183019092529182810190803683375050604080516001808252818301909252929350600092915060208083019080368337019050509050848260008151811061084257634e487b7160e01b600052603260045260246000fd5b602002602001018181525050838160008151811061087057634e487b7160e01b600052603260045260246000fd5b6020026020010181815250507f9373fada80bb4fe253d2f3b66e1294c4027086455c7ebf80c458eb45d47bcb6082826040516108ad929190610cfc565b60405180910390a1857fbe3735973ca0343de1647d2919131d9ef8ec8ff046e978626e9492ac01b9098e866040516108e59190610de6565b60405180910390a2505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b604080518082019091526000808252602082015290565b80356001600160a01b038116811461038157600080fd5b60008083601f840112610958578182fd5b50813567ffffffffffffffff81111561096f578182fd5b602083019150836020808302850101111561098957600080fd5b9250929050565b6000602082840312156109a1578081fd5b6109aa82610930565b9392505050565b60008060008060008060008060008060a08b8d0312156109cf578586fd5b8a3567ffffffffffffffff808211156109e6578788fd5b6109f28e838f01610947565b909c509a5060208d0135915080821115610a0a578788fd5b610a168e838f01610947565b909a50985060408d0135915080821115610a2e578788fd5b610a3a8e838f01610947565b909850965060608d0135915080821115610a52578586fd5b610a5e8e838f01610947565b909650945060808d0135915080821115610a76578384fd5b50610a838d828e01610947565b915080935050809150509295989b9194979a5092959850565b600060208284031215610aad578081fd5b5035919050565b60008060008060008060008060a0898b031215610acf578384fd5b88359750610adf60208a01610930565b9650604089013567ffffffffffffffff80821115610afb578586fd5b610b078c838d01610947565b909850965060608b0135915080821115610b1f578586fd5b610b2b8c838d01610947565b909650945060808b0135915080821115610b43578384fd5b50610b508b828c01610947565b999c989b5096995094979396929594505050565b600080600080600080600080600060a08a8c031215610b81578485fd5b8935985060208a013567ffffffffffffffff80821115610b9f578687fd5b610bab8d838e01610947565b909a50985060408c0135915080821115610bc3578687fd5b610bcf8d838e01610947565b909850965060608c0135915080821115610be7578586fd5b610bf38d838e01610947565b909650945060808c0135915080821115610c0b578384fd5b50610c188c828d01610947565b915080935050809150509295985092959850929598565b600080600060608486031215610c43578283fd5b505081359360208301359350604090920135919050565b60008060408385031215610c6c578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015610caa57815187529582019590820190600101610c8e565b509495945050505050565b606084901b6bffffffffffffffffffffffff1916815260006001600160fb1b03831115610ce0578081fd5b6020830280856014850137919091016014019081529392505050565b600060408252610d0f6040830185610c7b565b8281036020840152610d218185610c7b565b95945050505050565b918252602082015260400190565b6020808252600f908201526e04e6f6e4578697374656e7444726f7608c1b604082015260600190565b60208082526021908201527f4c696241707053746f726167653a20446f206e6f7420686176652061636365736040820152607360f81b606082015260800190565b602080825260139082015272082e4e4c2f298cadccee8d09ad2e6dac2e8c6d606b1b604082015260600190565b815181526020918201519181019190915260400190565b90815260200190565b6000808335601e19843603018112610e05578283fd5b83018035915067ffffffffffffffff821115610e1f578283fd5b602090810192508102360382131561098957600080fd5b60008219821115610e4957610e49610e69565b500190565b6000600019821415610e6257610e62610e69565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122016bfdf692cb9db6136a6ea3302449a7605ff29891690ed1f6c3df5d41dbc3d6764736f6c63430008010033";

export class MerkleDropFacet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleDropFacet> {
    return super.deploy(overrides || {}) as Promise<MerkleDropFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleDropFacet {
    return super.attach(address) as MerkleDropFacet;
  }
  connect(signer: Signer): MerkleDropFacet__factory {
    return super.connect(signer) as MerkleDropFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDropFacetInterface {
    return new utils.Interface(_abi) as MerkleDropFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDropFacet {
    return new Contract(address, _abi, signerOrProvider) as MerkleDropFacet;
  }
}
